name: Build Test and Release

on:
  push:
    branches:
      - "feature/*"
      - "fix/*"
      - beta
      - main
      - release
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0 # Do a shallow clone for GitVersion

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13

      - name: Check out code
        uses: actions/checkout@v3.0.2

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master # https://github.com/marketplace/actions/sonarcloud-scan
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.gitversion.outputs.FullSemVer }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.2

      - name: Set up Node.js
        uses: actions/setup-node@v3.5.0
        with:
          node-version: 18

      # ESLint must be in `package.json`
      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linters # https://github.com/marketplace/actions/lint-action
        uses: wearerequired/lint-action@v2
        with:
          eslint: true

      - uses: brpaz/hadolint-action@v1.5.0
        with:
          dockerfile: ./Dockerfile

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: [lint, sonarcloud]
    steps:
      - name: Check out code
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        if: ${{ github.actor != 'dependabot[bot]' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build only for dependabot PRs
        uses: docker/build-push-action@v3 # https://github.com/marketplace/actions/build-and-push-docker-images
        if: ${{ github.actor == 'dependabot[bot]' }}
        with:
          context: ./
          platforms: linux/amd64
          push: false
          build-args: |
            BUILD=${{ steps.gitversion.outputs.semVer }}

      - name: Docker build and push pre-release
        uses: docker/build-push-action@v3 # https://github.com/marketplace/actions/build-and-push-docker-images
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash != '' && github.actor != 'dependabot[bot]' }}
        with:
          context: ./
          platforms: linux/amd64
          push: true
          build-args: BUILD=${{ steps.gitversion.outputs.semVer }}
          tags: |
            ${{ github.repository }}:prerelease
            ${{ github.repository }}:${{ steps.gitversion.outputs.shortsha }}
            ${{ github.repository }}:${{ steps.gitversion.outputs.semVer }}
            ${{ github.repository }}:${{ steps.gitversion.outputs.escapedbranchname }}
            ${{ github.repository }}:${{ steps.gitversion.outputs.prereleaselabel }}

      - name: Docker build and push
        uses: docker/build-push-action@v3 # https://github.com/marketplace/actions/build-and-push-docker-images
        if: ${{ steps.gitversion.outputs.PreReleaseTagWithDash == '' && github.actor != 'dependabot[bot]' }}
        with:
          context: ./
          platforms: linux/amd64
          push: true
          build-args: BUILD=${{ steps.gitversion.outputs.semVer }}
          tags: |
            ${{ github.repository }}:latest
            ${{ github.repository }}:${{ steps.gitversion.outputs.shortsha }}
            ${{ github.repository }}:${{ steps.gitversion.outputs.major }}
            ${{ github.repository }}:${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }}
            ${{ github.repository }}:${{ steps.gitversion.outputs.semVer }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint, sonarcloud]
    if: contains(github.ref, 'main')
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: "5.x"

      - name: Version with GitVersion # https://github.com/marketplace/actions/use-actions
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.gitversion.outputs.SemVer }}
          release_branches: main

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
